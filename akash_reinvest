#!/bin/bash
####  processing variables that can be changed
akash_validator=akashvaloper...
key_address=akash...
key_name=my_demo
reserve_amt=500000000   #  500 AKT - amount to keep in reserve
threshold_amt=2000000   #    2 AKT - threshold amount when reinvest occurs
####

####   set up some defaults do not change
akash_precision=1000000
akash_chain_id=akashnet-2
rpc_node=http://135.181.60.250:26657
delay_seconds=15

function log_data()
{
  log_date=$(date +"%Y-%m-%d %T")
  echo $log_date "$1" $2
}

function withdraw_rewards()
{
  withdraw_hash=`/root/bin/akash tx distribution withdraw-rewards $akash_validator --fees 5000uakt --from $key_name --keyring-backend test --node $rpc_node --chain-id $chain_id  --yes | jq -r '.txhash'`
  sleep $delay_secs

  log_data ' - The withdraw request completed with ' $?
  log_data ' -- Transaction Hash is - ' $withdraw_hash

}

function wallet_balance()
{
  # get the akash value we have in the wallet
  akash_value=`/root/bin/akash query bank balances $key_address --node $rpc_node -o json | jq -r '.balances[0].amount'`
  sleep $delay_secs
}

function delegate_net()
{
  delegation_json=`/root/bin/akash tx staking delegate $akash_validator $akash_amt --from $key_name --fees 5000uakt --chain-id $akash_chain_id --keyring-backend test --node $rpc_node --yes`
  sleep $delay_secs
  # echo 'Delegation cmd ---> ' $delegation_cmd

#  delegation_json=`$delegation_cmd`

  # echo 'JSON---> ' $delegation_json
  delegation_hash=$(echo $delegation_json | jq -r '.txhash')
  delegation_rawlog=$(echo $delegation_json | jq -r '.raw_log')
}

###--  Start Processing Here -- ###

# log some initial entries about the execution
log_data ' ---------------------------------------------------- '
log_data ' The Akash Reinvest application has started           '

# Check and withdraw any commissions & rewards
log_data ' - Withdraw Rewards & Commissions Balances           '
withdraw_rewards

# Check Wallet Balance for Amounts sufficient to Delegate
log_data ' - Check Wallet Balance for Amounts to Delegate      '
wallet_balance

# calculate values
let akash_decimals=$akash_value%$akash_precision
let akash_net=$(((($akash_value/$akash_precision)*$akash_precision)-$reserve_amt))

# echo the value to the console
log_data ' -- Reserve Amount -  ' $reserve_amt
log_data ' -- Wallet Balance -  ' $akash_value
log_data ' -------- decimals --    ' $akash_decimals
log_data ' ----- Net Balance -  ' $akash_net

# Delegate Net Balance to Validator
# only delegate if amount >= than threshold_amt
if [[ $akash_net -ge $threshold_amt ]]
then
  log_data ' - Delegate Net Wallet Balance to Validator          '
  akash_amt=$akash_net'uakt'
  delegate_net
  log_data ' -- The delegation request completed with ' $?
  log_data ' --- Delegation Hash is - ' $delegation_hash
  log_data ' --- Delegation Raw Log - ' $delegation_rawlog
  log_data ' --- Amount Delegated   - ' $akash_amt
else
  log_data ' - Insufficient Wallet Balance to Delegate '
fi

log_data ' The Delegation Reinvestment Process has Completed!   '
log_data ' ---------------------------------------------------- '
